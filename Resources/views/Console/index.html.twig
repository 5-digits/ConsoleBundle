{% extends 'CoreSphereConsoleBundle:Console:layout.html.twig'  %}

{% block title %}{{ 'console.headline.index'|trans }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/coresphereconsole/css/console.css') }}" type="text/css" />
{% endblock %}

{% block content %}
    <h1>Console</h1>
    <div id="coresphere_consolebundle_console" class="console">
        <p class="console_working_dir">Working directory: <strong>{{ working_dir }}</strong></p>
        <div id="coresphere_consolebundle_log_container" class="console_log_container">
            <ol id="coresphere_consolebundle_log" class="console_log">

            </ol>
        </div>
        <div id="coresphere_consolebundle_prompt" class="console_prompt">
            <div id="coresphere_consolebundle_input" contenteditable="true" class="console_input"></div>
        </div>
        <div id="coresphere_consolebundle_suggestions" class="console_suggestions"></div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    $(function() {

        var commands = {% include "CoreSphereConsoleBundle:Console:command_list.json.twig" %},

            filters         = {

                'clear' : function() {
                    log.html('');

                    return '';
                }

            },
            htmlEscape      = function(input) {
                return input.split("&").join("&amp;").split( "<").join("&lt;").split(">").join("&gt;")
            },
            placeCaretAtEnd = function (el) {
                el.focus();
                if (typeof window.getSelection != "undefined"
                        && typeof document.createRange != "undefined") {
                    var range = document.createRange();
                    range.selectNodeContents(el);
                    range.collapse(false);
                    var sel = window.getSelection();
                    sel.removeAllRanges();
                    sel.addRange(range);
                } else if (typeof document.body.createTextRange != "undefined") {
                    var textRange = document.body.createTextRange();
                    textRange.moveToElementText(el);
                    textRange.collapse(false);
                    textRange.select();
                }
            },
            input           = $('#coresphere_consolebundle_input'),
            log_container   = $('#coresphere_consolebundle_log_container'),
            log             = $('#coresphere_consolebundle_log'),
            suggestion_box  = $('#coresphere_consolebundle_suggestions')

        ;

        placeCaretAtEnd(input[0]);
        log.append('<li>Type <code class="console_command">list</code> to get a list of all commands.</li>');


        if( ! localStorage['coresphere_console_history']) {
            localStorage['coresphere_console_history'] = '[]';
        }

        var history = JSON.parse(localStorage['coresphere_console_history']);

        history = history.slice(-20);

        var current_history = history.length,
            enabled = true,
            enable_suggestions = true,
            current_suggestion_base;

        $(input).bind('keydown', function(event) {
            if( ! enabled) {
                return;
            }

            var val = input.text();

            if(event.which === 9) {
                event.preventDefault();
                var active = suggestion_box.find('.active');

                if( active.size() ) {
                    var sug = active.text();
                    input.text(sug.substr(0, sug.length));

                    placeCaretAtEnd(input[0]);

                } else if( suggestion_box.find('li').size() ) {
                    var sug = suggestion_box.find('li').first().text();
                    input.text(sug.substr(0, sug.length));

                    placeCaretAtEnd(input[0]);

                }
            } else if(event.which === 13 && !event.shiftKey) {
                var active = suggestion_box.find('.active');

                if( active.size() ) {
                    if(val !== active.text()) {
                        input.text(val = active.text());
                        suggestion_box.text('');

                        placeCaretAtEnd(input[0]);

                        event.preventDefault();
                        return;
                    }
                }

                var command = val;
                input.text('');

                if(val.length && history[ history.length-1 ] !== val) {
                    history.push(val);
                    localStorage['coresphere_console_history'] = JSON.stringify(history);
                }

                current_history = history.length;


                if(command.substr(0,1) === '.') {
                    var filter = command.substr(1);

                    if(filters[filter]) {
                        command = filters[filter].call(null);
                    }

                }

                if(command.length) {
                    log.append('<li class="loading"><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><div class="console_log_output">Loading...</div></li>');

                    enabled = false;

                    $.ajax({
                         url: '{{ path('console_exec') }}',
                         type: "POST",
                         data: ({"command" : command}),
                         dataType: "json"
                     })

                     .success(function(json) {
                         var answer = json.output.replace(/^\s+|\s+$/g,"");
                         log.append('<li><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><div class="console_log_output">'+(answer.length?answer:'Complete')+'</div></li>');
                     })

                     .error(function(xhr, msg, error) {
                         log.append('<li class="error"><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><div class="console_log_output">['+msg+'] '+error+'</div></li>');
                     })

                     .complete(function() {
                         log.find('.loading').remove();
                         enabled = true;
                         log_container.scrollTop(log.outerHeight());
                         placeCaretAtEnd(input[0]);
                     })

                     ;
                }

                 event.preventDefault();

             } else if(event.which === 38 || event.which === 40) {
                 var current_suggestions = suggestion_box.find('li'),
                      active_suggestion = current_suggestions.filter('.active'),
                      next;

                 if(event.which === 38) {
                     // UP

                     if(current_suggestions.size()) {
                         next = active_suggestion.size() ? active_suggestion.removeClass('active').prev() : current_suggestions.last();
                         //next = next.size() ? next : current_suggestions.last();
                         next.addClass('active').text()
                     } else {
                         current_history--;
                         if(current_history<0) {
                             current_history = 0;
                         } else {
                              input.text(history[current_history]);
                         }
                     }
                  } else {
                     // DOWN

                     if(current_suggestions.size()) {
                         next = active_suggestion.size() ? active_suggestion.removeClass('active').next() : current_suggestions.first();
                         next = next.size() ? next : current_suggestions.first();
                         next.addClass('active').text()
                     } else {
                         current_history++;
                         if(current_history>history.length) {
                             current_history = history.length;
                         } else {
                             input.text(history[current_history]);
                         }
                     }

                  }

                   placeCaretAtEnd(input[0]);
                   enable_suggestions = false;

                   event.preventDefault();
             } else if(event.which === 27) {
                 input.text('');
                 placeCaretAtEnd(input[0]);
             }


             if((event.which<37 || event.which>40) && event.which!==9) {
                 enable_suggestions = true;
             }

        })

        .bind('keyup', function(event) {
            if(enable_suggestions) {
                var val = input.text(),
                    best_suggestions = [],
                    other_suggestions = [],
                    suggestions
                    any = 0;


                if(val.length) {
                    current_suggestion_base = val;
                    for(var index in commands) {
                        if(new RegExp('^'+val).test(commands[index])) {
                            best_suggestions.push(commands[index].replace(val, '<strong class="match">'+val+'</strong>'));
                            any++;
                        } else if(new RegExp(val).test(commands[index])) {
                            other_suggestions.push(commands[index].replace(val, '<strong class="match">'+val+'</strong>'));
                            any++;
                        }
                        if(commands[index] === val) {
                            any--;
                        }
                    }

                    suggestions = best_suggestions.concat(other_suggestions);
                }

                if(any) {
                    enable_suggestions = false;
                    suggestion_box.html('<h2 class="suggestion_head">Did you mean:</h2><ul><li class="active">'+suggestions.join('</li><li>')+'</li></ul>');
                } else {
                    suggestion_box.text('');
                }
            }
        })


        ;

        $(window)

        .delegate('.console_command', 'click', function(event) {
           enable_suggestions = true;
           input.text($(this).text()).trigger('keyup');
           placeCaretAtEnd(input[0]);
        })

        .delegate('#coresphere_consolebundle_suggestions li', 'mouseover', function(event) {
            var $this = $(this);

            suggestion_box.find('.active').removeClass('active');
            $this.addClass('active');
            placeCaretAtEnd(input[0]);
        })

        .delegate('#coresphere_consolebundle_suggestions li', 'click', function(event) {
            var $this = $(this);

            suggestion_box.find('.active').removeClass('active');
            $this.addClass('active');
            input.text($this.text());
            suggestion_box.text('');
            placeCaretAtEnd(input[0]);
        })


        ;
    });

</script>
{% endblock %}