{% extends 'CoreSphereConsoleBundle:Console:layout.html.twig'  %}

{% block title %}{{ 'console.headline.index'|trans }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/coresphereconsole/css/console.css') }}" type="text/css" />
{% endblock %}

{% block content %}
    <h1>Console</h1>
    <div id="coresphere_consolebundle_console" class="console">
        <p class="console_working_dir">Working directory: <strong>{{ working_dir }}</strong></p>
        <div id="coresphere_consolebundle_log_container" class="console_log_container">
            <ol id="coresphere_consolebundle_log" class="console_log">

            </ol>
        </div>
        <div id="coresphere_consolebundle_prompt" class="console_prompt">
            <div id="coresphere_consolebundle_input" contenteditable="true" class="console_input"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
    $(function() {

        var filters = {

            'clear' : function() {
                log.html('');

                return '';
            }

        }

        var htmlEscape = function(input) {
            return input.split("&").join("&amp;").split( "<").join("&lt;").split(">").join("&gt;")
        }

        var input = $('#coresphere_consolebundle_input');
        var log_container = $('#coresphere_consolebundle_log_container');
        var log = $('#coresphere_consolebundle_log');

        input.focus();
        log.append('<li>Type <code class="console_command">list</code> to get a list of all commands.</li>');


        if( ! localStorage['coresphere_console_history']) {
            localStorage['coresphere_console_history'] = '[]';
        }

        var history = JSON.parse(localStorage['coresphere_console_history']);

        history = history.slice(-20);

        var current_history = history.length;
        var enabled = true;

        $(input).bind('keydown', function(event) {
            if( ! enabled) {
                return;
            }
            var val = input.text();
            if(event.which == 13 && !event.shiftKey) {
                var command = val;
                input.text('');

                if(val.length && history[ history.length-1 ] !== val) {
                    history.push(val);
                    localStorage['coresphere_console_history'] = JSON.stringify(history);
                }

                current_history = history.length;


                if(command.substr(0,1) === '.') {
                    var filter = command.substr(1);

                    if(filters[filter]) {
                        command = filters[filter].call(null);
                    }

                }

                if(command.length) {
                    log.append('<li class="loading"><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><pre>Loading...</pre></li>');

                    enabled = false;

                    $.ajax({
                         url: '{{ path('console_exec') }}',
                         type: "POST",
                         data: ({"command" : command}),
                         dataType: "json"
                     })

                     .success(function(json) {
                         log.append('<li><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><div class="console_log_output">'+json.output.replace(/^\s+|\s+$/g,"")+'</div></li>');
                     })

                     .error(function(xhr, msg, error) {
                         log.append('<li class="error"><div class="console_log_input">&gt; '+htmlEscape(val)+'</div><div>['+msg+'] '+error+'</div></li>');
                     })

                     .complete(function() {
                         log.find('.loading').remove();
                         enabled = true;
                         log_container.scrollTop(log.outerHeight());
                         input.focus();
                     })

                     ;
                }

                 event.preventDefault();

             } else if(event.which == 38) {
                 // UP
                 current_history--;
                 if(current_history<0) {
                     current_history = 0;
                 } else {
                     input.text(history[current_history]);
                 }

                 event.preventDefault();
             } else if(event.which == 40) {
                // DOWN
                current_history++;
                if(current_history>history.length) {
                     current_history = history.length;
                 } else {
                    input.text(history[current_history]);
                }

                event.preventDefault();
             }
        });

        $(window).delegate('.console_command', 'click', function(event) {
           input.text($(this).text()).select().focus();
        });
    });

</script>
{% endblock %}